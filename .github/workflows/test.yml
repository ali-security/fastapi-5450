name: Test

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-pydantic-v2-${{ hashFiles('pyproject.toml', 'requirements-tests.txt') }}-test-v04
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip config set global.index-url "https://fastapi:eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImJhYzE2Mjc3In0.eyJzdWIiOiIxZDRmOTNmNy1kOGQ4LTRiNDMtYWQ5YS0yN2FjODI5MTFmZjAiLCJ0eXBlIjoidGVuYW50QWNjZXNzVG9rZW4iLCJ0ZW5hbnRJZCI6Ijc2NTk0MzY1LTBjZjMtNGEzZi1iODk4LWQ0MGI1NDAwMmRiNyIsImFwcGxpY2F0aW9uSWQiOiIwMWQ3NTcxMy04NjZlLTRlZGYtODQ3Zi1lZDkwYTk0Nzg1ZGIiLCJyb2xlcyI6WyJGRVRDSC1ST0xFUy1CWS1BUEkiXSwicGVybWlzc2lvbnMiOlsiRkVUQ0gtUEVSTUlTU0lPTlMtQlktQVBJIl0sImF1ZCI6ImJhYzE2Mjc3LTVjYmUtNDA3Yy04MjM5LWRmZmY3Mzk4ZWIwZSIsImlzcyI6Imh0dHBzOi8vbG9naW4uc2VhbHNlY3VyaXR5LmlvIiwiaWF0IjoxNzE3NTg0ODQxLCJleHAiOjE3MTc2NzEyNDF9.Pk2etd6VYdvMggq1EKZmAmcLvxxqvo4a84mu4BdcZvTbtMhVpdLn249QPX7WWki3AR3h1UmZNpqNxd8QpGHiFEbHSpjOVWAM8iwKd9J12N7XlROOrC7hH2BlfuyYm00CZETfmbp8Ws35nCyIb1f2kNfTTTXT079qUq36coBNpM1CJC1aH7UeCyEAqVaBJwu2JQ2SAEjumfmljHxYLTFYjso3tR9-_KU3t9FhTkpaKaMyDRCeomntc9HAerCoSZrg7pYt6SQm1Hqd9SwQPWVWEMSPerih1yniEo5J4TWc5Qu5S5J-7FNNliCtzlHypUSO-_YUb5HeAZ6RONIAX2xH9g@pypi.sealsecurity.io/simple"
          pip install -r requirements-tests.txt
      - name: Install Pydantic v2
        run: pip install "pydantic>=2.0.2,<3.0.0"
      - name: Lint
        run: bash scripts/lint.sh

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - name: Install Dependencies
        run: pip install hatchling==1.17.1
      - name: Build
        run: python -m hatchling build
      - name: Store dist files
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        pydantic-version: ["pydantic-v1", "pydantic-v2"]
      fail-fast: false
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ matrix.pydantic-version }}-${{ hashFiles('pyproject.toml', 'requirements-tests.txt') }}-test-v04
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip config set global.index-url "https://fastapi:eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImJhYzE2Mjc3In0.eyJzdWIiOiIxZDRmOTNmNy1kOGQ4LTRiNDMtYWQ5YS0yN2FjODI5MTFmZjAiLCJ0eXBlIjoidGVuYW50QWNjZXNzVG9rZW4iLCJ0ZW5hbnRJZCI6Ijc2NTk0MzY1LTBjZjMtNGEzZi1iODk4LWQ0MGI1NDAwMmRiNyIsImFwcGxpY2F0aW9uSWQiOiIwMWQ3NTcxMy04NjZlLTRlZGYtODQ3Zi1lZDkwYTk0Nzg1ZGIiLCJyb2xlcyI6WyJGRVRDSC1ST0xFUy1CWS1BUEkiXSwicGVybWlzc2lvbnMiOlsiRkVUQ0gtUEVSTUlTU0lPTlMtQlktQVBJIl0sImF1ZCI6ImJhYzE2Mjc3LTVjYmUtNDA3Yy04MjM5LWRmZmY3Mzk4ZWIwZSIsImlzcyI6Imh0dHBzOi8vbG9naW4uc2VhbHNlY3VyaXR5LmlvIiwiaWF0IjoxNzE3NTg0ODQxLCJleHAiOjE3MTc2NzEyNDF9.Pk2etd6VYdvMggq1EKZmAmcLvxxqvo4a84mu4BdcZvTbtMhVpdLn249QPX7WWki3AR3h1UmZNpqNxd8QpGHiFEbHSpjOVWAM8iwKd9J12N7XlROOrC7hH2BlfuyYm00CZETfmbp8Ws35nCyIb1f2kNfTTTXT079qUq36coBNpM1CJC1aH7UeCyEAqVaBJwu2JQ2SAEjumfmljHxYLTFYjso3tR9-_KU3t9FhTkpaKaMyDRCeomntc9HAerCoSZrg7pYt6SQm1Hqd9SwQPWVWEMSPerih1yniEo5J4TWc5Qu5S5J-7FNNliCtzlHypUSO-_YUb5HeAZ6RONIAX2xH9g@pypi.sealsecurity.io/simple"
          pip install -r requirements-tests.txt
      - name: Install Pydantic v1
        if: matrix.pydantic-version == 'pydantic-v1'
        run: pip install "pydantic>=1.10.0,<2.0.0"
      - name: Install Pydantic v2
        if: matrix.pydantic-version == 'pydantic-v2'
        run: pip install "pydantic>=2.0.2,<3.0.0"
      - run: mkdir coverage
      - name: Test
        run: bash scripts/test.sh
        env:
          COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}
      - name: Store coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  coverage-combine:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - name: Get coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage
      - run: pip install coverage[toml]
      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "Coverage for ${{ github.sha }}"
      - name: Store coverage HTML
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: htmlcov

  # https://github.com/marketplace/actions/alls-green#why
  check:  # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - coverage-combine
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
